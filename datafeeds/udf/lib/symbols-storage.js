import{getErrorMessage,logMessage}from"./helpers";function extractField(e,t,s,i){const o=e[t];return!Array.isArray(o)||i&&!Array.isArray(o[0])?o:o[s]}function symbolKey(e,t,s){return e+(void 0!==t?"_%|#|%_"+t:"")+(void 0!==s?"_%|#|%_"+s:"")}export class SymbolsStorage{constructor(e,t,s){this._exchangesList=["NYSE","FOREX","AMEX"],this._symbolsInfo={},this._symbolsList=[],this._datafeedUrl=e,this._datafeedSupportedResolutions=t,this._requester=s,this._readyPromise=this._init(),this._readyPromise.catch((e=>{console.error(`SymbolsStorage: Cannot init, error=${e.toString()}`)}))}resolveSymbol(e,t,s){return this._readyPromise.then((()=>{const i=this._symbolsInfo[symbolKey(e,t,s)];return void 0===i?Promise.reject("invalid symbol"):Promise.resolve(i)}))}searchSymbols(e,t,s,i){return this._readyPromise.then((()=>{const o=[],r=0===e.length;e=e.toUpperCase();for(const i of this._symbolsList){const n=this._symbolsInfo[i];if(void 0===n)continue;if(s.length>0&&n.type!==s)continue;if(t&&t.length>0&&n.exchange!==t)continue;const a=n.name.toUpperCase().indexOf(e),l=n.description.toUpperCase().indexOf(e);if(r||a>=0||l>=0){const e=o.some((e=>e.symbolInfo===n));if(!e){const e=a>=0?a:8e3+l;o.push({symbolInfo:n,weight:e})}}}const n=o.sort(((e,t)=>e.weight-t.weight)).slice(0,i).map((e=>{const t=e.symbolInfo;return{symbol:t.name,full_name:t.full_name,description:t.description,exchange:t.exchange,params:[],type:t.type,ticker:t.name}}));return Promise.resolve(n)}))}_init(){const e=[],t={};for(const s of this._exchangesList)t[s]||(t[s]=!0,e.push(this._requestExchangeData(s)));return Promise.all(e).then((()=>{this._symbolsList.sort(),logMessage("SymbolsStorage: All exchanges data loaded")}))}_requestExchangeData(e){return new Promise(((t,s)=>{this._requester.sendRequest(this._datafeedUrl,"symbol_info",{group:e}).then((i=>{try{this._onExchangeDataReceived(e,i)}catch(o){return void s(o instanceof Error?o:new Error(`SymbolsStorage: Unexpected exception ${o}`))}t()})).catch((s=>{logMessage(`SymbolsStorage: Request data for exchange '${e}' failed, reason=${getErrorMessage(s)}`),t()}))}))}_onExchangeDataReceived(e,t){let s=0;try{const e=t.symbol.length,i=void 0!==t.ticker;for(;s<e;++s){const e=t.symbol[s],o=extractField(t,"exchange-listed",s),r=extractField(t,"exchange-traded",s),n=r+":"+e,a=extractField(t,"currency-code",s),l=extractField(t,"unit-id",s),c=i?extractField(t,"ticker",s):e,d={ticker:c,name:e,base_name:[o+":"+e],full_name:n,listed_exchange:o,exchange:r,currency_code:a,original_currency_code:extractField(t,"original-currency-code",s),unit_id:l,original_unit_id:extractField(t,"original-unit-id",s),unit_conversion_types:extractField(t,"unit-conversion-types",s,!0),description:extractField(t,"description",s),has_intraday:definedValueOrDefault(extractField(t,"has-intraday",s),!1),has_no_volume:definedValueOrDefault(extractField(t,"has-no-volume",s),void 0),visible_plots_set:definedValueOrDefault(extractField(t,"visible-plots-set",s),void 0),minmov:extractField(t,"minmovement",s)||extractField(t,"minmov",s)||0,minmove2:extractField(t,"minmove2",s)||extractField(t,"minmov2",s),fractional:extractField(t,"fractional",s),pricescale:extractField(t,"pricescale",s),type:extractField(t,"type",s),session:extractField(t,"session-regular",s),session_holidays:extractField(t,"session-holidays",s),corrections:extractField(t,"corrections",s),timezone:extractField(t,"timezone",s),supported_resolutions:definedValueOrDefault(extractField(t,"supported-resolutions",s,!0),this._datafeedSupportedResolutions),has_daily:definedValueOrDefault(extractField(t,"has-daily",s),!0),intraday_multipliers:definedValueOrDefault(extractField(t,"intraday-multipliers",s,!0),["1","5","15","30","60"]),has_weekly_and_monthly:extractField(t,"has-weekly-and-monthly",s),has_empty_bars:extractField(t,"has-empty-bars",s),volume_precision:definedValueOrDefault(extractField(t,"volume-precision",s),0),format:"price"};this._symbolsInfo[c]=d,this._symbolsInfo[e]=d,this._symbolsInfo[n]=d,void 0===a&&void 0===l||(this._symbolsInfo[symbolKey(c,a,l)]=d,this._symbolsInfo[symbolKey(e,a,l)]=d,this._symbolsInfo[symbolKey(n,a,l)]=d),this._symbolsList.push(e)}}catch(i){throw new Error(`SymbolsStorage: API error when processing exchange ${e} symbol #${s} (${t.symbol[s]}): ${Object(i).message}`)}}}function definedValueOrDefault(e,t){return void 0!==e?e:t}